#!/bin/sh
#
# Boot prometheus and grafana
#
# usage:
# ./linkerd-viz [platform]
#
# platform can be one of: [dcos, k8s]

PLATFORM="${1:-dcos}"
APP="${2:-grafana}"
PUBLIC_PORT="${PUBLIC_PORT:-3000}"
STATS_PORT="${STATS_PORT:-9090}"

if [ "$APP" = "grafana" ]; then

  #
  # init grafana
  #
  echo "initializing grafana"

  prometheus_data_source=$(cat <<EOF
{
  "access": "proxy",
  "isDefault": true,
  "jsonData": {},
  "name": "prometheus",
  "type": "prometheus",
  "url": "http://prometheus"
}
EOF
)

  grafana_ini=$(cat <<EOF
[auth.anonymous]
enabled = true
org_role = Admin

[dashboards.json]
enabled = true
path = /etc/grafana/dashboards

[server]
http_port = $PUBLIC_PORT
EOF
)

  printf "%s\n" "$grafana_ini" > /etc/grafana/grafana.ini

  http_proxy=http://localhost:4140 /run.sh &

  until $(curl -sfo /dev/null http://localhost:$PUBLIC_PORT/api/datasources); do
    # wait for grafana to boot
    sleep 1
  done
  curl -vX POST -d "${prometheus_data_source}" -H "Content-Type: application/json" http://localhost:$PUBLIC_PORT/api/datasources
  curl -vX PUT -d"{\"theme\": \"dark\"}" -H "Content-Type: application/json" http://localhost:$PUBLIC_PORT/api/org/preferences

  tail -f /var/log/grafana/grafana.log

else

  #
  # init prometheus
  #
  echo "initializing prometheus"

  /bin/prometheus \
    -config.file=/etc/prometheus/prometheus-$PLATFORM.yml \
    -storage.local.path=/prometheus \
    -web.console.libraries=/etc/prometheus/console_libraries \
    -web.console.templates=/etc/prometheus/consoles \
    -web.listen-address=:$STATS_PORT
fi
